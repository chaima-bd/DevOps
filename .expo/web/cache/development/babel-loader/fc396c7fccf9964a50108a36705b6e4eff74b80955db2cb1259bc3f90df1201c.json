{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { async } from 'q';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Caminterface = function Caminterface(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageUri = _useState2[0],\n    setImageUri = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    labels = _useState4[0],\n    setLabels = _useState4[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1\n        });\n        if (!result.canceled) {\n          setImageUri(result.assets[0].uri);\n        }\n        console.log(result);\n      } catch (error) {\n        console.log('Error', error);\n      }\n      ;\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var analyzeImage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        if (!imageUri) {\n          alert('Please select an image first!!');\n          return;\n        }\n        var apikey = \"AIzaSyCxdrHF5jahLZ_bdj6vt3YjNoRYmNcUPsY\";\n        var apiURL = \"https://vision.googleapis.com/v1/images:annotate?key=\" + apikey;\n        var base64ImageData = yield FileSystem.readAsStringAsync(imageUri, {\n          encoding: FileSystem.EncodingType.Base64\n        });\n        var requestData = {\n          requests: [{\n            image: {\n              content: base64ImageData\n            },\n            features: [{\n              type: 'LABEL_DETECTION',\n              maxResults: 5\n            }]\n          }]\n        };\n        var apiResponse = yield axios.post(apiURL, requestData);\n        console.log('API Response:', apiResponse.data);\n        setLabels(apiResponse.data.responses[0].labelAnnotations);\n      } catch (error) {\n        console.error('Error analyzing image: ', error);\n        alert('Error analyzing image. Please try again later');\n      }\n    });\n    return function analyzeImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(LinearGradient, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Google Cloud Vision API Demo\"\n      }), imageUri && _jsx(Image, {\n        source: {\n          uri: imageUri\n        },\n        style: {\n          width: 300,\n          height: 300\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Pick Image...\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: analyzeImage,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Analyse Image\"\n        })\n      }), labels.length > 0 && _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Labels:\"\n        }), labels == null ? void 0 : labels.map(function (label) {\n          return _jsx(Text, {\n            style: styles.outputtext,\n            children: label.description\n          }, label.mid);\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 50,\n    marginTop: 100\n  },\n  button: {\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    marginBottom: 10,\n    marginTop: 20\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  label: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 20\n  },\n  outputtext: {\n    fontSize: 18,\n    marginBottom: 10\n  }\n});\nexport default Caminterface;","map":{"version":3,"names":["React","useState","useEffect","axios","ImagePicker","FileSystem","LinearGradient","async","jsx","_jsx","jsxs","_jsxs","Caminterface","_ref","navigation","_useState","_useState2","_slicedToArray","imageUri","setImageUri","_useState3","_useState4","labels","setLabels","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","uri","console","log","error","apply","arguments","analyzeImage","_ref3","alert","apikey","apiURL","base64ImageData","readAsStringAsync","encoding","EncodingType","Base64","requestData","requests","image","content","features","type","maxResults","apiResponse","post","data","responses","labelAnnotations","style","flex","children","View","styles","container","Text","title","Image","source","width","height","TouchableOpacity","onPress","button","text","length","label","map","outputtext","description","mid","StyleSheet","create","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","marginTop","padding"],"sources":["C:/Users/chaim/OneDrive/Desktop/IA2I S3/DevOps/SmartPack/screens/Caminterface.js"],"sourcesContent":["import { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { async } from 'q';\r\n\r\nconst Caminterface = ({ navigation }) => {\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    const pickImage = async () => {\r\n\r\n        try {\r\n            let result = await ImagePicker.launchImageLibraryAsync({\r\n\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing: true,\r\n                aspect: [4, 3],\r\n                quality: 1,\r\n            });\r\n\r\n            if (!result.canceled) {\r\n                setImageUri(result.assets[0].uri);\r\n            }\r\n            console.log(result);\r\n        } catch (error) {\r\n            console.log('Error', error)\r\n        };\r\n    }\r\n    /////////////////////////::\r\n    const analyzeImage = async () => {\r\n        try {\r\n            if (!imageUri) {\r\n                alert('Please select an image first!!');\r\n                return;\r\n            }\r\n            // replace your google cloud vision api key with your actual API key\r\n            const apikey = \"AIzaSyCxdrHF5jahLZ_bdj6vt3YjNoRYmNcUPsY\";\r\n            const apiURL = `https://vision.googleapis.com/v1/images:annotate?key=${apikey}`;\r\n            // read the image file from local URI and convert it to base64\r\n            const base64ImageData = await FileSystem.readAsStringAsync(imageUri, {\r\n                encoding: FileSystem.EncodingType.Base64,\r\n            });\r\n\r\n            const requestData = {\r\n                requests: [\r\n                    {\r\n                        image: {\r\n                            content: base64ImageData,\r\n                        },\r\n                        features: [{ type: 'LABEL_DETECTION', maxResults: 5 }],\r\n                    },\r\n                ],\r\n            };\r\n\r\n            const apiResponse = await axios.post(apiURL, requestData);\r\n            console.log('API Response:', apiResponse.data); // Check the structure of the response\r\n            //setLabels(apiResponse.data.responses[0].labelAnnotations || []); // Use an empty array as fallback\r\n            setLabels(apiResponse.data.responses[0].labelAnnotations);\r\n        } catch (error) {\r\n            console.error('Error analyzing image: ', error);\r\n            alert('Error analyzing image. Please try again later');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <LinearGradient\r\n            style={{\r\n                flex: 1\r\n            }}\r\n        //colors={[COLORS.secondary, COLORS.primary]}\r\n        >\r\n\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>\r\n                    Google Cloud Vision API Demo\r\n                </Text>\r\n                {imageUri && (\r\n                    <Image\r\n                        source={{ uri: imageUri }}\r\n                        style={{ width: 300, height: 300 }}\r\n                    />\r\n                )}\r\n\r\n                <TouchableOpacity\r\n                    onPress={pickImage}\r\n                    style={styles.button}>\r\n                    <Text style={styles.text}>Pick Image...</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={analyzeImage}\r\n                    style={styles.button}>\r\n                    <Text style={styles.text}>Analyse Image</Text>\r\n                </TouchableOpacity>\r\n\r\n                {\r\n                    labels.length > 0 && (\r\n                        <View>\r\n                            <Text style={styles.label}>\r\n                                Labels:\r\n                            </Text>\r\n                            {\r\n                               labels?.map((label) => (\r\n                                    <Text\r\n                                        key={label.mid}\r\n                                        style={styles.outputtext}\r\n                                    >\r\n                                        {label.description}\r\n                                    </Text>\r\n                                ))\r\n                            }\r\n                        </View>\r\n                    )\r\n                }\r\n\r\n            </View>\r\n        </LinearGradient>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        marginBottom: 50,\r\n        marginTop: 100,\r\n    },\r\n    button: {\r\n        backgroundColor: '#DDDDDD',\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        marginTop: 20,\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n    label: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginTop: 20,\r\n    },\r\n    outputtext: {\r\n        fontSize: 18,\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nexport default Caminterface;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}